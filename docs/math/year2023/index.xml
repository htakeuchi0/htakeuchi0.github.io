<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>2023 on htakeuchi0 のノート</title><link>https://htakeuchi0.github.io/docs/math/year2023/</link><description>Recent content in 2023 on htakeuchi0 のノート</description><generator>Hugo</generator><language>ja-jp</language><atom:link href="https://htakeuchi0.github.io/docs/math/year2023/index.xml" rel="self" type="application/rss+xml"/><item><title>2023 - 実装改良編</title><link>https://htakeuchi0.github.io/docs/math/year2023/year2023_2/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://htakeuchi0.github.io/docs/math/year2023/year2023_2/</guid><description>&lt;h1 id="2023---実装改良編">
 2023 - 実装改良編
 &lt;a class="anchor" href="#2023---%e5%ae%9f%e8%a3%85%e6%94%b9%e8%89%af%e7%b7%a8">#&lt;/a>
&lt;/h1>
&lt;h2 id="概要">
 概要
 &lt;a class="anchor" href="#%e6%a6%82%e8%a6%81">#&lt;/a>
&lt;/h2>
&lt;p>&lt;a href="https://htakeuchi0.github.io/docs/math/year2023/">前ページ&lt;/a>では，&lt;/p>

&lt;link rel="stylesheet" href="https://htakeuchi0.github.io/katex/katex.min.css" />
&lt;script defer src="https://htakeuchi0.github.io/katex/katex.min.js">&lt;/script>
&lt;script defer src="https://htakeuchi0.github.io/katex/auto-render.min.js" onload="renderMathInElement(document.body);">&lt;/script>&lt;span>
 \[2023=(2+0+2+3)(2^2+0^2+2^2+3^2)^2\]
&lt;/span>

&lt;p>であることに着目して，以下の問題を解いたのでした．&lt;/p>
&lt;blockquote class="book-hint info">
&lt;p>&lt;b>Problem 1&lt;/b>.
整数 \(x=\sum_{j=0}^{n-1}a_j10^j\) \((0\le a_j\le 9,j=0,1,\dots,n-1)\) に対して，
\[ \prod_{k=1}^K\sum_{j=0}^{n-1}a_j^{i_k}=x \]
を満たす整数 \(K\ge1\), \(1\le i_1\le\cdots\le i_K\) が存在するかを判定せよ．存在する場合はこの方程式を満たす \((i_1,i_2,\dots,i_K)\) をひとつ求めよ．&lt;/p>
&lt;/blockquote>
&lt;p>本ページでは，そこで解説した解法を改良する方法を説明します．
その後，改良前後で実行時間を比較します．ただし，結果はほとんど変わりませんでした．&lt;/p>
&lt;h2 id="実装改良">
 実装改良
 &lt;a class="anchor" href="#%e5%ae%9f%e8%a3%85%e6%94%b9%e8%89%af">#&lt;/a>
&lt;/h2>
&lt;p>前ページで解説した解法は以下のとおりでした&lt;sup id="fnref:1">&lt;a href="#fn:1" class="footnote-ref" role="doc-noteref">1&lt;/a>&lt;/sup>．&lt;/p>
&lt;blockquote class="book-hint info">
&lt;p>&lt;b>Algorithm 2&lt;/b>.
\(\mathtt{Solve}(a, x, i)\) の擬似コードを以下で定める．ただし，\((a_1,\dots,a_n)\in\mathbb{N}^n,(b_1,\dots,b_m)\in\mathbb{N}^m\) に対して，\(\mathtt{append}(a,b)=(a_1,\dots,a_n,b_1,\dots,b_m)\in\mathbb{N}^{n+m}\) とする．&lt;/p>
&lt;ul>
&lt;li>Input: \(a\in\mathbb{N}^n,x\in\mathbb{N},i\in\mathbb{N}\)&lt;/li>
&lt;li>Output: \(\prod_{k=1}^K\sum_{j=0}^{n-1}a_j^{i_k}=x,i\le i_1\le\dots\le i_K\) を満たす \((i_1,i_2,\dots,i_K)\)&lt;/li>
&lt;/ul>
&lt;ol>
&lt;li>if \(\max(a)\le1\) then&lt;/li>
&lt;li>  if \(i&amp;gt;1\) then return \(\emptyset\)&lt;/li>
&lt;li>  if \(\sum_{j=0}^{n-1}a_j=x\) then return \((1)\)&lt;/li>
&lt;li>  else return \(\emptyset\)&lt;/li>
&lt;li>end if&lt;/li>
&lt;li>for \(i&amp;rsquo;=i,i+1,\dots\) do&lt;/li>
&lt;li>  \(y\leftarrow\sum_{j=0}^{n-1}a_j^{i&amp;rsquo;}\)&lt;/li>
&lt;li>  if \(y&amp;gt;x\) then return \(\emptyset\)&lt;/li>
&lt;li>  if \(y=x\) then return \((i&amp;rsquo;)\)&lt;/li>
&lt;li>  if \(y\mid x\) then&lt;/li>
&lt;li>    \(L\leftarrow\mathtt{Solve}(a,x/y,i&amp;rsquo;)\)&lt;/li>
&lt;li>    if \(L=\emptyset\) then return \(\emptyset\)&lt;/li>
&lt;li>    else return \(\mathtt{append}((i&amp;rsquo;),L)\)&lt;/li>
&lt;li>  end if&lt;/li>
&lt;li>end for&lt;/li>
&lt;/ol>
&lt;/blockquote>
&lt;p>このアルゴリズムは，11行目によって再帰処理になっていますが， &lt;strong>再帰させずに，単に &lt;span>
 \(x\)
&lt;/span>
 を &lt;span>
 \(x/y\)
&lt;/span>
 に置き換えて処理を継続させることができます．&lt;/strong> この場合，再帰処理用に用意していた第3引数の &lt;span>
 \(i\)
&lt;/span>
 が不要になります．&lt;/p></description></item></channel></rss>